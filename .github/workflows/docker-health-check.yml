name: Docker Health Check

on:
  schedule:
    - cron: '0 */6 * * *'
  workflow_dispatch:
  push:
    branches: 
      - main
      - 'fix/*'
  pull_request:
    branches: 
      - main
      - 'fix/*'

jobs:
  health-check:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Checkout Config Repository
        uses: actions/checkout@v4
        with:
          repository: UruruLab/Ururu-AI-Config
          path: config
          token: ${{ secrets.PRIVATE_REPO_TOKEN }}

      - name: Copy Config Files (.env files)
        run: |
          mkdir -p ./
          if compgen -G "config/.env*" > /dev/null; then
            cp config/.env* ./
            echo "‚úÖ Config files copied successfully"
          else
            echo "‚ùå Config files not found in config repository"
            exit 1
          fi

      - name: Verify Environment Files
        run: |
          echo "üìÅ Checking copied environment files"
          ls -la .env*
          if [ -f ".env.development" ]; then
            echo "‚úÖ .env.development file exists"
          else
            echo "‚ùå .env.development file missing"
            exit 1
          fi
          if [ -f ".env.production" ]; then
            echo "‚úÖ .env.production file exists"
          else
            echo "‚ùå .env.production file missing"
            exit 1
          fi

      - name: Validate Docker Compose Configuration
        run: |
          echo "‚úÖ Validating main Docker Compose file syntax"
          cd docker && docker compose config --quiet
          echo "‚úÖ Docker Compose validation completed"

      - name: Verify Environment Variable Bindings
        run: |
          echo "üîç Verifying environment variable bindings"
          echo "Production environment validation:"
          cd docker && ENVIRONMENT=production docker compose config \
            | grep -A 10 "environment:" \
            | head -10 || echo "Environment validation completed"

      - name: Simulate Health Check
        run: |
          echo "üîç AI Service Health Check Simulation"
          echo "- Target: http://localhost:8000/health"
          echo "- Expected Response: {\"status\": \"healthy\", \"service\": \"ururu-ai-recommendation\"}"
          
          echo "üîç Spring Backend Connection Test Simulation"
          echo "- Target: http://localhost:8080/health"
          echo "- Actual connection only available in EC2 environment"

      - name: Check GitHub Container Registry Images
        run: |
          echo "üì¶ Checking latest Docker images"
          echo "- Registry: ghcr.io/${{ github.repository }}"
          echo "- Latest tags: latest, main, develop"

      - name: Generate Health Check Report
        run: |
          echo "üìä Health Check Completion Report"
          echo "‚úÖ Docker Compose configuration files validated"
          echo "‚úÖ Config repository integration working"
          echo "‚úÖ Environment-specific configuration files verified"
          echo "‚úÖ Workflow configuration validated"
          echo "Ô∏è  Actual service status needs separate verification on EC2"
          echo "Run on EC2: docker compose ps && docker compose logs"
